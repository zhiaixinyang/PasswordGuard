import java.text.DateFormat
import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

def getVersionCodeProperty() {
    def versionPropsFile = file('version.properties')
    def versionProps = new Properties()
    versionProps.load(versionPropsFile.newReader())
    return versionProps.getProperty('VERSION_CODE').toInteger()
}

def getVersionNameProperty() {
    def versionPropsFile = file('version.properties')
    def versionProps = new Properties()
    versionProps.load(versionPropsFile.newReader())
    return versionProps.getProperty('VERSION_NAME')
}

static def getDateTime() {
    DateFormat df = new SimpleDateFormat("YYYYMMddHHmm")
    return df.format(new Date())
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.mdove.passwordguard"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode getVersionCodeProperty()
        versionName getVersionNameProperty()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        sweetSignConfig {
            storeFile file("$rootProject.projectDir/tool/keystore/PasswordGuard.keystore")
            storePassword "wjzj000"
            keyAlias "password"
            keyPassword "wjzj000"
        }
        debug {
            storeFile file("$rootProject.projectDir/tool/keystore/debug/debug.keystore")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                def outputFile = output.outputFile
                def fileName
                if (outputFile != null && outputFile.name.endsWith('.apk')) {
                    if (variant.buildType.name == 'release') {
                        fileName = "PasswordGuard-$variant.buildType.name-v${defaultConfig.versionName}-${defaultConfig.versionCode}}-${getDateTime()}.apk"
                    } else {
                        fileName = "PasswordGuard-$variant.buildType.name-v${defaultConfig.versionName}-${defaultConfig.versionCode}}.apk"
                    }
                    outputFileName = fileName
                }
            }
        }
    }
    dataBinding {
        enabled = true
    }
}

greendao {
    schemaVersion 4
    daoPackage 'com.mdove.passwordguard.greendao'
    targetGenDir 'src/main/java'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    Map<String, String> dependencies = rootProject.ext.dependencies
    implementation dependencies.appCompat
    implementation dependencies.constranintLayout
    implementation dependencies.cardView
    implementation dependencies.design
    implementation dependencies.rxAndroid
    implementation dependencies.rxJava
    implementation dependencies.rxBus
    implementation dependencies.recyclerView
    implementation dependencies.retrofit
    implementation dependencies.retrofitConverterGson
    implementation dependencies.retrofitAdapterRxJava

    compile 'org.greenrobot:greendao:3.0.1'
    compile 'org.greenrobot:greendao-generator:3.0.0'
}
