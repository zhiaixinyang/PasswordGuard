package com.mdove.passwordguard.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.mdove.passwordguard.greendao.entity.DailySelf;
import com.mdove.passwordguard.greendao.entity.DeletedPassword;
import com.mdove.passwordguard.greendao.entity.GroupInfo;
import com.mdove.passwordguard.greendao.entity.Password;
import com.mdove.passwordguard.greendao.entity.DeletedDailySelf;

import com.mdove.passwordguard.greendao.DailySelfDao;
import com.mdove.passwordguard.greendao.DeletedPasswordDao;
import com.mdove.passwordguard.greendao.GroupInfoDao;
import com.mdove.passwordguard.greendao.PasswordDao;
import com.mdove.passwordguard.greendao.DeletedDailySelfDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig dailySelfDaoConfig;
    private final DaoConfig deletedPasswordDaoConfig;
    private final DaoConfig groupInfoDaoConfig;
    private final DaoConfig passwordDaoConfig;
    private final DaoConfig deletedDailySelfDaoConfig;

    private final DailySelfDao dailySelfDao;
    private final DeletedPasswordDao deletedPasswordDao;
    private final GroupInfoDao groupInfoDao;
    private final PasswordDao passwordDao;
    private final DeletedDailySelfDao deletedDailySelfDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        dailySelfDaoConfig = daoConfigMap.get(DailySelfDao.class).clone();
        dailySelfDaoConfig.initIdentityScope(type);

        deletedPasswordDaoConfig = daoConfigMap.get(DeletedPasswordDao.class).clone();
        deletedPasswordDaoConfig.initIdentityScope(type);

        groupInfoDaoConfig = daoConfigMap.get(GroupInfoDao.class).clone();
        groupInfoDaoConfig.initIdentityScope(type);

        passwordDaoConfig = daoConfigMap.get(PasswordDao.class).clone();
        passwordDaoConfig.initIdentityScope(type);

        deletedDailySelfDaoConfig = daoConfigMap.get(DeletedDailySelfDao.class).clone();
        deletedDailySelfDaoConfig.initIdentityScope(type);

        dailySelfDao = new DailySelfDao(dailySelfDaoConfig, this);
        deletedPasswordDao = new DeletedPasswordDao(deletedPasswordDaoConfig, this);
        groupInfoDao = new GroupInfoDao(groupInfoDaoConfig, this);
        passwordDao = new PasswordDao(passwordDaoConfig, this);
        deletedDailySelfDao = new DeletedDailySelfDao(deletedDailySelfDaoConfig, this);

        registerDao(DailySelf.class, dailySelfDao);
        registerDao(DeletedPassword.class, deletedPasswordDao);
        registerDao(GroupInfo.class, groupInfoDao);
        registerDao(Password.class, passwordDao);
        registerDao(DeletedDailySelf.class, deletedDailySelfDao);
    }
    
    public void clear() {
        dailySelfDaoConfig.clearIdentityScope();
        deletedPasswordDaoConfig.clearIdentityScope();
        groupInfoDaoConfig.clearIdentityScope();
        passwordDaoConfig.clearIdentityScope();
        deletedDailySelfDaoConfig.clearIdentityScope();
    }

    public DailySelfDao getDailySelfDao() {
        return dailySelfDao;
    }

    public DeletedPasswordDao getDeletedPasswordDao() {
        return deletedPasswordDao;
    }

    public GroupInfoDao getGroupInfoDao() {
        return groupInfoDao;
    }

    public PasswordDao getPasswordDao() {
        return passwordDao;
    }

    public DeletedDailySelfDao getDeletedDailySelfDao() {
        return deletedDailySelfDao;
    }

}
